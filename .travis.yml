language: generic

matrix:
  include:
    # Linux / Python 2
    - os: linux
      env:
        - PYTHON=python2
        - CACHE_NAME=linux_py2
      dist: trusty
      sudo: required
    # Linux / Python 3
    - os: linux
      env:
        - PYTHON=python3
        - CACHE_NAME=linux_py3
      dist: trusty
      sudo: required
    # OSX / Python 3
    - os: osx
      osx_image: xcode8
      env:
        - PYTHON=python3
        - CACHE_NAME=osx_py3

cache:
  directories:
    - .cache

before_install:
  - |
    (
    set -ex
    # Bootstrap dev environment.
    ./bootstrap.sh "$PYTHON"
    # List installed packages versions.
    $PYTHON -m pip list --format=columns
    if [ $TRAVIS_OS_NAME = osx ]
    then
      # The directory containing pyrcc5/pyuic55 is not in $PATH,
      # so just use the right Python modules directly.
      sed -i '' \
        -e 's/"pyrcc5"/"'$PYTHON' -m PyQt5.pyrcc_main"/' \
        -e 's/"pyuic5"/"'$PYTHON' -m PyQt5.uic.pyuic"/' \
        pyuic.json
    fi
    )

install: true

script:
  - git fetch --quiet --unshallow
  - $PYTHON setup.py patch_version
  - $PYTHON setup.py test
  - |
    (
    set -ex
    # Only generate artifacts if we're actually going to deploy them.
    # Note: if we moved this to the `before_deploy` phase, we would
    # not have to check, but we'd also lose caching; since the cache
    # is stored before the `before_install` phase...
    if [ -z "$TRAVIS_TAG" ]
    then
      exit 0
    fi
    case "$TRAVIS_OS_NAME" in
    osx)
      if [ $PYTHON = python3 ]
      then
        $PYTHON setup.py bdist_dmg
      fi
      ;;
    linux)
      if [ $PYTHON = python3 ]
      then
        $PYTHON setup.py bdist_wheel sdist
        sudo apt-get install -qq \
          libfuse2 \
          python3-requests \
          libglib2.0-dev \
          libx11-dev \
          libxmu-dev \
          libbz2-dev \
          libgdbm-dev \
          liblzma-dev \
          libncurses5-dev \
          libreadline-dev \
          libsqlite3-dev \
          libssl-dev \
          zlib1g-dev \
          libudev-dev \
          libusb-1.0-0-dev \
          libdbus-1-dev \
          libdbus-glib-1-dev \
          ;
        ./linux/appimage.sh -c -j 2 -w dist/*.whl
        rm -rf .cache/pip
      fi
      ;;
    esac
    # Not all builds will produce artifacts.
    du -hs dist/* || true
    )

deploy:
  provider: releases
  skip_cleanup: true
  api_key:
    secure: r18soiT54TVfzsetD5hIiZ0w1eaUXUyLOPb0x15Fy2YWiiG08Eg30XmRbh0e+c7E7HRkCf0zIzqF09gxzUM2wyGbp5I28tzgNzatt79iYrCfGo/Qy18+xjbdYSJ0na5cj9DArrorCrZLoQVBshKVYmaktu7oSBOTy9hNIRys+447ylhG8Mc4iSCNsaXxA4mj1nyijjrhQu4Cb1UrsUWhnSKUdt+naxs6oqPX0oDh2AbPpWTTiBpDgiR8RzLcgpr3Zy5wAAkzzhJUBVuS1w79XmYNxOuJkLXZ7+pBmQLLI9WLXekv7g04jUJJLkBX4hbu2t88KU1Dsb7suBE5X+w3EwCa6jA1yC+Pbn0De63OuixaetBlM3ZlaU4tPTW6dWjdf+qzkuWMUydqFFqMFWkE7eKjx3DxBrz7CECZVGy3W+eyI7jS8GR2wrZZ7By2gslOakOGSKqNobuAiDu5roOdeEmd3Bn+G/3BWXI8KzLwgzcxCiGWFQb0p0hVrAZHAVa+eRujslZt63lAtF/UhfXQiV9CmwTIVFX9J3VPW7u+9IQEcyZhpfqsZ8XL/g4F7y4Emu669I1h30c8QFTghTCxdROoUkUYiYGDpDkZ4CZPgYtV1YrJgJ7CFAdS1UJaCGjRxhPwnsLE5vaQumD7CBgm92QdFahsXfd3w2zvXivEdaA=
  draft: true
  file_glob: true
  file:
    - "dist/*.AppImage"
    - "dist/*.dmg"
    - "dist/*.egg"
    - "dist/*.tar.gz"
    - "dist/*.whl"
  on:
    tags: true
